// source: graph.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.proto.Graph_ConfigRequest', null, global);
goog.exportSymbol('proto.proto.Graph_ConfigRequest.AlgorithmType', null, global);
goog.exportSymbol('proto.proto.Graph_EmptyResponse', null, global);
goog.exportSymbol('proto.proto.Graph_Location', null, global);
goog.exportSymbol('proto.proto.Graph_Point', null, global);
goog.exportSymbol('proto.proto.Graph_RouteRequest', null, global);
goog.exportSymbol('proto.proto.Graph_RouteResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Graph_Location = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.Graph_Location.repeatedFields_, null);
};
goog.inherits(proto.proto.Graph_Location, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Graph_Location.displayName = 'proto.proto.Graph_Location';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Graph_Point = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Graph_Point, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Graph_Point.displayName = 'proto.proto.Graph_Point';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Graph_RouteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Graph_RouteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Graph_RouteRequest.displayName = 'proto.proto.Graph_RouteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Graph_RouteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.Graph_RouteResponse.repeatedFields_, null);
};
goog.inherits(proto.proto.Graph_RouteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Graph_RouteResponse.displayName = 'proto.proto.Graph_RouteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Graph_ConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Graph_ConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Graph_ConfigRequest.displayName = 'proto.proto.Graph_ConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Graph_EmptyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Graph_EmptyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Graph_EmptyResponse.displayName = 'proto.proto.Graph_EmptyResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.Graph_Location.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Graph_Location.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Graph_Location.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Graph_Location} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Graph_Location.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    coordinatesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Graph_Location}
 */
proto.proto.Graph_Location.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Graph_Location;
  return proto.proto.Graph_Location.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Graph_Location} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Graph_Location}
 */
proto.proto.Graph_Location.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCoordinates(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Graph_Location.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Graph_Location.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Graph_Location} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Graph_Location.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCoordinatesList();
  if (f.length > 0) {
    writer.writePackedFloat(
      2,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.proto.Graph_Location.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Graph_Location} returns this
 */
proto.proto.Graph_Location.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated float coordinates = 2;
 * @return {!Array<number>}
 */
proto.proto.Graph_Location.prototype.getCoordinatesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.proto.Graph_Location} returns this
 */
proto.proto.Graph_Location.prototype.setCoordinatesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.proto.Graph_Location} returns this
 */
proto.proto.Graph_Location.prototype.addCoordinates = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Graph_Location} returns this
 */
proto.proto.Graph_Location.prototype.clearCoordinatesList = function() {
  return this.setCoordinatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Graph_Point.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Graph_Point.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Graph_Point} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Graph_Point.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    location: (f = msg.getLocation()) && proto.proto.Graph_Location.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Graph_Point}
 */
proto.proto.Graph_Point.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Graph_Point;
  return proto.proto.Graph_Point.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Graph_Point} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Graph_Point}
 */
proto.proto.Graph_Point.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNodeId(value);
      break;
    case 2:
      var value = new proto.proto.Graph_Location;
      reader.readMessage(value,proto.proto.Graph_Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Graph_Point.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Graph_Point.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Graph_Point} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Graph_Point.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.proto.Graph_Location.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 node_id = 1;
 * @return {number}
 */
proto.proto.Graph_Point.prototype.getNodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Graph_Point} returns this
 */
proto.proto.Graph_Point.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Graph_Location location = 2;
 * @return {?proto.proto.Graph_Location}
 */
proto.proto.Graph_Point.prototype.getLocation = function() {
  return /** @type{?proto.proto.Graph_Location} */ (
    jspb.Message.getWrapperField(this, proto.proto.Graph_Location, 2));
};


/**
 * @param {?proto.proto.Graph_Location|undefined} value
 * @return {!proto.proto.Graph_Point} returns this
*/
proto.proto.Graph_Point.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.Graph_Point} returns this
 */
proto.proto.Graph_Point.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Graph_Point.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Graph_RouteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Graph_RouteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Graph_RouteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Graph_RouteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: (f = msg.getFrom()) && proto.proto.Graph_Point.toObject(includeInstance, f),
    to: (f = msg.getTo()) && proto.proto.Graph_Point.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Graph_RouteRequest}
 */
proto.proto.Graph_RouteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Graph_RouteRequest;
  return proto.proto.Graph_RouteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Graph_RouteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Graph_RouteRequest}
 */
proto.proto.Graph_RouteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.Graph_Point;
      reader.readMessage(value,proto.proto.Graph_Point.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 2:
      var value = new proto.proto.Graph_Point;
      reader.readMessage(value,proto.proto.Graph_Point.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Graph_RouteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Graph_RouteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Graph_RouteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Graph_RouteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.proto.Graph_Point.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.proto.Graph_Point.serializeBinaryToWriter
    );
  }
};


/**
 * optional Graph_Point from = 1;
 * @return {?proto.proto.Graph_Point}
 */
proto.proto.Graph_RouteRequest.prototype.getFrom = function() {
  return /** @type{?proto.proto.Graph_Point} */ (
    jspb.Message.getWrapperField(this, proto.proto.Graph_Point, 1));
};


/**
 * @param {?proto.proto.Graph_Point|undefined} value
 * @return {!proto.proto.Graph_RouteRequest} returns this
*/
proto.proto.Graph_RouteRequest.prototype.setFrom = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.Graph_RouteRequest} returns this
 */
proto.proto.Graph_RouteRequest.prototype.clearFrom = function() {
  return this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Graph_RouteRequest.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Graph_Point to = 2;
 * @return {?proto.proto.Graph_Point}
 */
proto.proto.Graph_RouteRequest.prototype.getTo = function() {
  return /** @type{?proto.proto.Graph_Point} */ (
    jspb.Message.getWrapperField(this, proto.proto.Graph_Point, 2));
};


/**
 * @param {?proto.proto.Graph_Point|undefined} value
 * @return {!proto.proto.Graph_RouteRequest} returns this
*/
proto.proto.Graph_RouteRequest.prototype.setTo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.Graph_RouteRequest} returns this
 */
proto.proto.Graph_RouteRequest.prototype.clearTo = function() {
  return this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Graph_RouteRequest.prototype.hasTo = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.Graph_RouteResponse.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Graph_RouteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Graph_RouteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Graph_RouteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Graph_RouteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalDistance: jspb.Message.getFieldWithDefault(msg, 1, 0),
    shortestRoutesList: jspb.Message.toObjectList(msg.getShortestRoutesList(),
    proto.proto.Graph_Location.toObject, includeInstance),
    traverseFowardRoutesList: jspb.Message.toObjectList(msg.getTraverseFowardRoutesList(),
    proto.proto.Graph_Location.toObject, includeInstance),
    traverseBackwardRoutesList: jspb.Message.toObjectList(msg.getTraverseBackwardRoutesList(),
    proto.proto.Graph_Location.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Graph_RouteResponse}
 */
proto.proto.Graph_RouteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Graph_RouteResponse;
  return proto.proto.Graph_RouteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Graph_RouteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Graph_RouteResponse}
 */
proto.proto.Graph_RouteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalDistance(value);
      break;
    case 2:
      var value = new proto.proto.Graph_Location;
      reader.readMessage(value,proto.proto.Graph_Location.deserializeBinaryFromReader);
      msg.addShortestRoutes(value);
      break;
    case 3:
      var value = new proto.proto.Graph_Location;
      reader.readMessage(value,proto.proto.Graph_Location.deserializeBinaryFromReader);
      msg.addTraverseFowardRoutes(value);
      break;
    case 4:
      var value = new proto.proto.Graph_Location;
      reader.readMessage(value,proto.proto.Graph_Location.deserializeBinaryFromReader);
      msg.addTraverseBackwardRoutes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Graph_RouteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Graph_RouteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Graph_RouteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Graph_RouteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalDistance();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getShortestRoutesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.proto.Graph_Location.serializeBinaryToWriter
    );
  }
  f = message.getTraverseFowardRoutesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.proto.Graph_Location.serializeBinaryToWriter
    );
  }
  f = message.getTraverseBackwardRoutesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.proto.Graph_Location.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 total_distance = 1;
 * @return {number}
 */
proto.proto.Graph_RouteResponse.prototype.getTotalDistance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Graph_RouteResponse} returns this
 */
proto.proto.Graph_RouteResponse.prototype.setTotalDistance = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Graph_Location shortest_routes = 2;
 * @return {!Array<!proto.proto.Graph_Location>}
 */
proto.proto.Graph_RouteResponse.prototype.getShortestRoutesList = function() {
  return /** @type{!Array<!proto.proto.Graph_Location>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Graph_Location, 2));
};


/**
 * @param {!Array<!proto.proto.Graph_Location>} value
 * @return {!proto.proto.Graph_RouteResponse} returns this
*/
proto.proto.Graph_RouteResponse.prototype.setShortestRoutesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.proto.Graph_Location=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Graph_Location}
 */
proto.proto.Graph_RouteResponse.prototype.addShortestRoutes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.proto.Graph_Location, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Graph_RouteResponse} returns this
 */
proto.proto.Graph_RouteResponse.prototype.clearShortestRoutesList = function() {
  return this.setShortestRoutesList([]);
};


/**
 * repeated Graph_Location traverse_foward_routes = 3;
 * @return {!Array<!proto.proto.Graph_Location>}
 */
proto.proto.Graph_RouteResponse.prototype.getTraverseFowardRoutesList = function() {
  return /** @type{!Array<!proto.proto.Graph_Location>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Graph_Location, 3));
};


/**
 * @param {!Array<!proto.proto.Graph_Location>} value
 * @return {!proto.proto.Graph_RouteResponse} returns this
*/
proto.proto.Graph_RouteResponse.prototype.setTraverseFowardRoutesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.proto.Graph_Location=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Graph_Location}
 */
proto.proto.Graph_RouteResponse.prototype.addTraverseFowardRoutes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.proto.Graph_Location, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Graph_RouteResponse} returns this
 */
proto.proto.Graph_RouteResponse.prototype.clearTraverseFowardRoutesList = function() {
  return this.setTraverseFowardRoutesList([]);
};


/**
 * repeated Graph_Location traverse_backward_routes = 4;
 * @return {!Array<!proto.proto.Graph_Location>}
 */
proto.proto.Graph_RouteResponse.prototype.getTraverseBackwardRoutesList = function() {
  return /** @type{!Array<!proto.proto.Graph_Location>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Graph_Location, 4));
};


/**
 * @param {!Array<!proto.proto.Graph_Location>} value
 * @return {!proto.proto.Graph_RouteResponse} returns this
*/
proto.proto.Graph_RouteResponse.prototype.setTraverseBackwardRoutesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.proto.Graph_Location=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Graph_Location}
 */
proto.proto.Graph_RouteResponse.prototype.addTraverseBackwardRoutes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.proto.Graph_Location, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Graph_RouteResponse} returns this
 */
proto.proto.Graph_RouteResponse.prototype.clearTraverseBackwardRoutesList = function() {
  return this.setTraverseBackwardRoutesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Graph_ConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Graph_ConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Graph_ConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Graph_ConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    algorithmType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalDistance: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    shortestRoutes: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    traverseForwardRoutes: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    traverseBackwardRoutes: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Graph_ConfigRequest}
 */
proto.proto.Graph_ConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Graph_ConfigRequest;
  return proto.proto.Graph_ConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Graph_ConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Graph_ConfigRequest}
 */
proto.proto.Graph_ConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.proto.Graph_ConfigRequest.AlgorithmType} */ (reader.readEnum());
      msg.setAlgorithmType(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTotalDistance(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShortestRoutes(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTraverseForwardRoutes(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTraverseBackwardRoutes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Graph_ConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Graph_ConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Graph_ConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Graph_ConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlgorithmType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.proto.Graph_ConfigRequest.AlgorithmType = {
  DIJKSTRA: 0,
  BIDIRECTIONALDIJKSTRA: 1,
  ASTAR: 2,
  BIDIRECTIONALASTAR: 3,
  BIDIRECTIONALASTARLANDMARK: 4
};

/**
 * optional AlgorithmType algorithm_type = 1;
 * @return {!proto.proto.Graph_ConfigRequest.AlgorithmType}
 */
proto.proto.Graph_ConfigRequest.prototype.getAlgorithmType = function() {
  return /** @type {!proto.proto.Graph_ConfigRequest.AlgorithmType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.proto.Graph_ConfigRequest.AlgorithmType} value
 * @return {!proto.proto.Graph_ConfigRequest} returns this
 */
proto.proto.Graph_ConfigRequest.prototype.setAlgorithmType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool total_distance = 2;
 * @return {boolean}
 */
proto.proto.Graph_ConfigRequest.prototype.getTotalDistance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.Graph_ConfigRequest} returns this
 */
proto.proto.Graph_ConfigRequest.prototype.setTotalDistance = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.Graph_ConfigRequest} returns this
 */
proto.proto.Graph_ConfigRequest.prototype.clearTotalDistance = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Graph_ConfigRequest.prototype.hasTotalDistance = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool shortest_routes = 3;
 * @return {boolean}
 */
proto.proto.Graph_ConfigRequest.prototype.getShortestRoutes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.Graph_ConfigRequest} returns this
 */
proto.proto.Graph_ConfigRequest.prototype.setShortestRoutes = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.Graph_ConfigRequest} returns this
 */
proto.proto.Graph_ConfigRequest.prototype.clearShortestRoutes = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Graph_ConfigRequest.prototype.hasShortestRoutes = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool traverse_forward_routes = 4;
 * @return {boolean}
 */
proto.proto.Graph_ConfigRequest.prototype.getTraverseForwardRoutes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.Graph_ConfigRequest} returns this
 */
proto.proto.Graph_ConfigRequest.prototype.setTraverseForwardRoutes = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.Graph_ConfigRequest} returns this
 */
proto.proto.Graph_ConfigRequest.prototype.clearTraverseForwardRoutes = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Graph_ConfigRequest.prototype.hasTraverseForwardRoutes = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool traverse_backward_routes = 5;
 * @return {boolean}
 */
proto.proto.Graph_ConfigRequest.prototype.getTraverseBackwardRoutes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.Graph_ConfigRequest} returns this
 */
proto.proto.Graph_ConfigRequest.prototype.setTraverseBackwardRoutes = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.Graph_ConfigRequest} returns this
 */
proto.proto.Graph_ConfigRequest.prototype.clearTraverseBackwardRoutes = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Graph_ConfigRequest.prototype.hasTraverseBackwardRoutes = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Graph_EmptyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Graph_EmptyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Graph_EmptyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Graph_EmptyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Graph_EmptyResponse}
 */
proto.proto.Graph_EmptyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Graph_EmptyResponse;
  return proto.proto.Graph_EmptyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Graph_EmptyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Graph_EmptyResponse}
 */
proto.proto.Graph_EmptyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Graph_EmptyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Graph_EmptyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Graph_EmptyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Graph_EmptyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.proto);
