syntax = "proto3";
package proto;

import "validate/validate.proto";

option cc_enable_arenas = true;

service Graph_Service {
    rpc GetRoute(RouteRequest) returns(RouteResponse) {}
    rpc SetConfig(ConfigRequest) returns(ConfigResponse) {}
}

message Location {
    string type = 1;
    double lat = 2 [(validate.rules).double = {gte: -90, lte: 90}];
    double lng = 3 [(validate.rules).double = {gte: -180, lte: 180}];
}

message Point {
    int32 node_id = 1;
    Location location = 2;
}

message RouteRequest {
    Point from = 1;
    Point to = 2;
}

message RouteResponse {
    uint64 total_distance = 1;

    repeated Location shortest_routes = 2;
    repeated Location traverse_foward_routes = 3;
    repeated Location traverse_backward_routes = 4;
}

message ConfigRequest {
    enum AlgorithmType {
        Dijkstra = 0;
        BidirectionalDijkstra = 1;
        AStar = 2;
        BidirectionalAStar = 3;
        BidirectionalAStarLandmark = 4;
    }

    AlgorithmType algorithm_type  = 1;

    optional bool total_distance = 2;
    optional bool shortest_routes = 3;
    optional bool traverse_forward_routes = 4;
    optional bool traverse_backward_routes = 5;
}

message ConfigResponse {
    string msg = 1;
}
